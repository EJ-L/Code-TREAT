import os
import json
from .data import PrimeVulData, PrimeVulPairData, PrimeVulPair
import random
random.seed(42)
CURRENT_DIR = os.path.dirname(os.path.abspath(__file__))
PROJECT_ROOT = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

PRIMEVUL_PATH = os.path.join(PROJECT_ROOT, "..", "data", "primevul", "primevul_test.jsonl")
PRIMEVUL_PAIR_PATH = os.path.join(PROJECT_ROOT, "..", "data", "primevul", "primevul_test_paired.jsonl")

def load_jsonl_data(filepath):
    data = []
    with open(filepath, 'r') as f:
        for line in f.readlines():
            json_line = json.loads(line)
            # print(sorted(json_line.keys()))
            data.append(json_line)
    return data

class DataLoader:
    def __init__(self, dataset: str):
        self.dataset = dataset.lower()
        self.data = []
        # self._load_data()
        
    def load_data(self):
        if self.dataset == "primevul":
            data = load_jsonl_data(PRIMEVUL_PATH)
            for datum in data:
                keys = ["idx", "project", "commit_id", "target", "func", "hash", "cwe"]
                datum_metainfo = {k: datum[k] if k in datum.keys() else None for k in keys}
                primevul_datum = PrimeVulData(**datum_metainfo) 
                self.data.append(primevul_datum)
        elif self.dataset == "primevul_pair":
            data = load_jsonl_data(PRIMEVUL_PAIR_PATH)
            assert len(data) % 2 == 0
            for i in range(0, len(data), 2):
                datum1, datum2 = data[i], data[i+1]
                keys = ['idx', 'project', 'commit_id', 'project_url', 'commit_url', 'commit_message', 'target', 'func', 'func_hash', 'file_name', 'file_hash', 'cwe', 'cve', 'cve_desc', 'nvd_url']
                datum1_metainfo = {k: datum1[k] for k in keys}
                datum2_metainfo = {k: datum2[k] for k in keys}
                primevul_datum1, primevul_datum2 = PrimeVulPairData(**datum1_metainfo), PrimeVulPairData(**datum2_metainfo)
                primevul_pair = PrimeVulPair(primevul_datum1, primevul_datum2)
                self.data.append(primevul_pair)
        return self.data
            