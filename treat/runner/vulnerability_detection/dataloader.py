import os
import json
from .data import PrimeVulData, PrimeVulPairData, PrimeVulPair
import random
random.seed(42)
from datasets import load_dataset

class DataLoader:
    def __init__(self, dataset: str, reproduce: bool = True):
        self.dataset = dataset.lower()
        self.reproduce = reproduce
        self.data = []
        
    def _select_dataset_name(self, base_name: str) -> str:
        """Return lite or full dataset name based on reproduce flag."""
        return f"{base_name}_lite" if self.reproduce else base_name

    def load_data(self):
        if self.dataset == "primevul":
            hf_dataset_name = self._select_dataset_name("Code-TREAT/PrimeVul_original")
            ds = load_dataset(hf_dataset_name)
            full_data = ds['test']
            for datum in full_data:
                keys = ["idx", "project", "commit_id", "target", "func", "hash", "cwe"]
                datum_metainfo = {k: datum[k] if k in datum.keys() else None for k in keys}
                primevul_datum = PrimeVulData(**datum_metainfo) 
                self.data.append(primevul_datum)
        elif self.dataset == "primevul_pair":
            hf_dataset_name = self._select_dataset_name("Code-TREAT/PrimeVul-Paired_original")
            ds = load_dataset(hf_dataset_name)
            full_data = ds['test']
            assert len(full_data) % 2 == 0
            for i in range(0, len(full_data), 2):
                datum1, datum2 = full_data[i], full_data[i+1]
                keys = ['idx', 'project', 'commit_id', 'project_url', 'commit_url', 'commit_message', 'target', 'func', 'func_hash', 'file_name', 'file_hash', 'cwe', 'cve', 'cve_desc', 'nvd_url']
                datum1_metainfo = {k: datum1[k] for k in keys}
                datum2_metainfo = {k: datum2[k] for k in keys}
                primevul_datum1, primevul_datum2 = PrimeVulPairData(**datum1_metainfo), PrimeVulPairData(**datum2_metainfo)
                primevul_pair = PrimeVulPair(primevul_datum1, primevul_datum2)
                self.data.append(primevul_pair)
        return self.data
            
